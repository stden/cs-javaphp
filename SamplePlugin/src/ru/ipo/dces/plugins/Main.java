package ru.ipo.dces.plugins;

import ru.ipo.dces.pluginapi.Plugin;
import ru.ipo.dces.pluginapi.PluginEnvironment;
import ru.ipo.dces.clientservercommunication.ServerReturnedError;
import ru.ipo.dces.clientservercommunication.ServerReturnedNoAnswer;

import javax.swing.*;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.io.IOException;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.CellConstraints;

/**
 * Created by IntelliJ IDEA.
 * User: Илья
 * Date: 07.12.2008
 * Time: 20:08:15
 */
public class Main extends Plugin {
  private JTextPane statementTextPane;
  private JPanel pluginPanel;
  private JButton submitButton;
  private JTextField answerTextField;

  public Main(PluginEnvironment pluginEnvironment) {
    super(pluginEnvironment);

    pluginEnvironment.setTitle(pluginEnvironment.getProblemName());

    $$$setupUI$$$();
    addListeners();

    showStatement();
  }

  private void showStatement() {
    statementTextPane.setContentType("text/html");
    try {
      statementTextPane.setPage("file:///" + getClient().getProblemFolder().getCanonicalPath() + '/' + "statement.html");
    } catch (IOException e) {
      Document d = statementTextPane.getDocument();
      try {
        d.remove(0, d.getLength());
        d.insertString(0, "Не удается отобразить условие", null);
      } catch (BadLocationException e1) {
        //do nothing
      }
    }
  }

  private void addListeners() {
    submitButton.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent e) {
        if (answerTextField.getText().length() == 0) {
          JOptionPane.showMessageDialog(null, "Вы не ввели ответ");
          return;
        }
        if (JOptionPane.showConfirmDialog(null, "Подтвердите отсылку решения") == JOptionPane.YES_OPTION) {
          HashMap<String, String> res = new HashMap<String, String>();
          res.put("answer", answerTextField.getText());
          try {
            final HashMap<String, String> ans = getClient().submitSolution(res);
            if (ans.get("result").equals("yes"))
              JOptionPane.showMessageDialog(null, "Вы дали правильный ответ!");
            else
              JOptionPane.showMessageDialog(null, "Вы дали неправильный ответ!!");
          } catch (ServerReturnedError error) {
            JOptionPane.showMessageDialog(null, "Сервер недоволен ответом. Его сообщение: " + error.getMessage());
          } catch (ServerReturnedNoAnswer error) {
            JOptionPane.showMessageDialog(null, "Не удалось связаться с сервером. Ошибка: " + error.getMessage());
          }
        }
      }
    });
  }

  private void createUIComponents() {
    pluginPanel = this;
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    createUIComponents();
    pluginPanel.setLayout(new FormLayout("fill:0dlu:noGrow,left:4dlu:noGrow,fill:40dlu:noGrow,left:4dlu:noGrow,fill:140dlu:grow,left:4dlu:noGrow,fill:60dlu:noGrow,left:4dlu:noGrow,fill:0dlu:noGrow", "center:max(d;0px):noGrow,top:4dlu:noGrow,center:12dlu:noGrow,top:4dlu:noGrow,center:80dlu:grow,top:4dlu:noGrow,center:20dlu:noGrow,top:4dlu:noGrow,center:max(d;4px):grow"));
    statementTextPane = new JTextPane();
    statementTextPane.setEditable(false);
    CellConstraints cc = new CellConstraints();
    pluginPanel.add(statementTextPane, cc.xyw(3, 5, 5, CellConstraints.FILL, CellConstraints.FILL));
    submitButton = new JButton();
    submitButton.setText("Ответить");
    pluginPanel.add(submitButton, cc.xy(7, 7));
    answerTextField = new JTextField();
    pluginPanel.add(answerTextField, cc.xy(5, 7, CellConstraints.FILL, CellConstraints.DEFAULT));
    final JLabel label1 = new JLabel();
    label1.setText("Условие задачи");
    pluginPanel.add(label1, cc.xyw(3, 3, 5));
    final JLabel label2 = new JLabel();
    label2.setText("Ответ");
    pluginPanel.add(label2, cc.xy(3, 7));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return pluginPanel;
  }
}
