package ru.ipo.dces.plugins.admin;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import ru.ipo.dces.pluginapi.Plugin;
import ru.ipo.dces.pluginapi.PluginEnvironment;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import java.awt.*;

public class ManageUsersPlugin extends Plugin {
    private JPanel drawPanel;
    private JList list1;
    private JLabel contestsList;
    private ManageUsersPlugin.JUserTable userDataTable;


    /**
     * Инициализация plugin'а
     *
     * @param env environment for the plugin
     */
    public ManageUsersPlugin(PluginEnvironment env) {
        super(env);

        $$$setupUI$$$();

        //set table properties

        //userDataTableModel.setColumnIdentifiers(new String[]{"boo", "booboo"});

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        drawPanel.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:213px:noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:211px:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:16dlu:noGrow,top:4dlu:noGrow,center:163px:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        contestsList = new JLabel();
        contestsList.setText("Доступные контесты");
        CellConstraints cc = new CellConstraints();
        drawPanel.add(contestsList, cc.xy(3, 3));
        list1 = new JList();
        drawPanel.add(list1, cc.xywh(3, 4, 1, 2, CellConstraints.DEFAULT, CellConstraints.FILL));
        final JSeparator separator1 = new JSeparator();
        separator1.setOrientation(1);
        drawPanel.add(separator1, cc.xywh(5, 3, 1, 3, CellConstraints.FILL, CellConstraints.FILL));
        final JScrollPane scrollPane1 = new JScrollPane();
        drawPanel.add(scrollPane1, cc.xy(7, 5, CellConstraints.FILL, CellConstraints.FILL));
        userDataTable = new ManageUsersPlugin.JUserTable();
        scrollPane1.setViewportView(userDataTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return drawPanel;
    }

    public class JUserTable extends JTable {
        private UserTableModel userDataTableModel = new UserTableModel();

        public class UserTableModel extends DefaultTableModel {
            public boolean isCellEditable(int row, int column) {
                return column == 1;
            }
        }

        public JUserTable() {
            super();    //To change body of overridden methods use File | Settings | File Templates.

            this.setModel(userDataTableModel);
            this.getTableHeader().setReorderingAllowed(false);
            this.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            this.setCellSelectionEnabled(true);

            userDataTableModel.addColumn("Поле", new String[]{"Имя", "Отчество", "Фамилия"});
            userDataTableModel.addColumn("Значение", new String[]{"Василий", "\"Офонасеч\"", "Крупник"});

            this.getColumnModel().getColumn(0).setCellRenderer(new TableCellRenderer() {
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    JLabel label = new JLabel(value.toString());
                    label.setFont(label.getFont().deriveFont(Font.BOLD));
                    return label;
                }
            });


            this.putClientProperty("JTable.autoStartsEdit", Boolean.TRUE);
            this.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        }
    }

    private void createUIComponents() {
        drawPanel = this;
    }

}
